      pipeline {
        agent none
        tools {
          maven 'maven'
        }
        
   
        stages {
  
          stage("Source code analysis test") {
            agent any
            steps {
             withSonarQubeEnv('sonarqube') {
               sh 'mvn compile sonar:sonar -Dsonar.host.url=http://18.217.60.35:9000/ -Dsonar.sources=. -Dsonar.tests=. -Dsonar.test.inclusions=**/test/java/servlet/createpage_junit.java -Dsonar.exclusions=**/test/java/servlet/createpage_junit.java -Dsonar.login=admin -Dsonar.password=admin'
             }
            }
          }    
          
           stage("Maven build") {
             agent any
             steps {
               sh 'mvn clean install'
               }
             }
             
          
          stage("Deploy to QA") {
          agent any
            steps {
                     sh 'mvn package'
           
                    
                  }
             }
           

          stage('UPload to Artifactory'){
              steps{

                   script{
                      def server = Artifactory.server 'artifactory'
                      def rtGradle = Artifactory.newMavenBuild()
                      rtMaven.deployer releaseRepo:'libs-release-local', snapshotRepo:'libs-snapshot-local', server: server
                      rtMaven.resolver releaseRepo:'libs-release', snapshotRepo:'libs-snapshot', server: server
                  }

              }   
          }
      
             
          }
       }
